I"h%<blockquote>
  <p><i class="fas fa-info-circle"></i> CHEM 321B/421B Physical Chemistry I Lab (graduate, undergraduate level) was taught by 
<a href="/murat">Murat Kahveci</a> 
at <a href="https://www.roosevelt.edu/">Roosevelt University</a> in Fall 2017.  <a class="button button--outline-warning button--pill button--xs" href="https://blackboard.roosevelt.edu/">CHEM 321B/421B Course URL</a></p>
</blockquote>

<p>.swiper-demo {
  height: 220px;
}</p>
<div class="swiper swiper-demo">
  <div class="swiper__wrapper">
    <div class="swiper__slide">1</div>
    <div class="swiper__slide">2</div>
    <div class="swiper__slide">3</div>
    <div class="swiper__slide">4</div>
    <div class="swiper__slide">5</div>
    <div class="swiper__slide">6</div>
    <div class="swiper__slide">7</div>
  </div>
  <div class="swiper__button swiper__button--prev fas fa-chevron-left"></div>
  <div class="swiper__button swiper__button--next fas fa-chevron-right"></div>
</div>
<p>(function() {
  var SOURCES = window.TEXT_VARIABLES.sources;
  window.Lazyload.js(SOURCES.jquery, function() {
    function swiper(options) {
      var $window = $(window), $root = this, $swiperWrapper, $swiperSlides, $swiperButtonPrev, $swiperButtonNext,
        initialSlide, animation, onChange, onChangeEnd,
        rootWidth, count, preIndex, curIndex, translateX, CRITICAL_ANGLE = Math.PI / 3;</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  function setOptions(options) {
    var _options = options || {};
    initialSlide = _options.initialSlide || 0;
    animation = _options.animation === undefined &amp;&amp; true;
    onChange = onChange || _options.onChange;
    onChangeEnd = onChangeEnd || _options.onChangeEnd;
  }

  function init() {
    $swiperWrapper = $root.find('.swiper__wrapper');
    $swiperSlides = $root.find('.swiper__slide');
    $swiperButtonPrev = $root.find('.swiper__button--prev');
    $swiperButtonNext = $root.find('.swiper__button--next');
    animation &amp;&amp; $swiperWrapper.addClass('swiper__wrapper--animation');
    calc(true);
  }

  function preCalc() {
    rootWidth = $root.width();
    count = $swiperWrapper.children('.swiper__slide').length;
    if (count &lt; 2) {
      $swiperButtonPrev.addClass('d-none');
      $swiperButtonNext.addClass('d-none');
    }
    curIndex = initialSlide || 0;
    translateX = getTranslateXFromCurIndex();
  }

  var calc = (function() {
    var preAnimation, $swiperSlide, $preSwiperSlide;
    return function (needPreCalc, params) {
      needPreCalc &amp;&amp; preCalc();
      var _animation = (params &amp;&amp; params.animation !== undefined) ? params.animation : animation;
      if (preAnimation === undefined || preAnimation !== _animation) {
        preAnimation = _animation ? $swiperWrapper.addClass('swiper__wrapper--animation') :
          $swiperWrapper.removeClass('swiper__wrapper--animation');
      }
      if (preIndex !== curIndex) {
        ($preSwiperSlide = $swiperSlides.eq(preIndex)).removeClass('active');
        ($swiperSlide = $swiperSlides.eq(curIndex)).addClass('active');
        onChange &amp;&amp; onChange(curIndex, $swiperSlides.eq(curIndex), $swiperSlide, $preSwiperSlide);
        if (onChangeEnd) {
          if (_animation) {
            setTimeout(function() {
              onChangeEnd(curIndex, $swiperSlides.eq(curIndex), $swiperSlide, $preSwiperSlide);
            }, 400);
          } else {
            onChangeEnd(curIndex, $swiperSlides.eq(curIndex), $swiperSlide, $preSwiperSlide);
          }
        }
        preIndex = curIndex;
      }
      $swiperWrapper.css('transform', 'translate(' + translateX + 'px, 0)');
      if (count &gt; 1) {
        if (curIndex &lt;= 0) {
          $swiperButtonPrev.addClass('disabled');
        } else {
          $swiperButtonPrev.removeClass('disabled');
        }
        if (curIndex &gt;= count - 1) {
          $swiperButtonNext.addClass('disabled');
        } else {
          $swiperButtonNext.removeClass('disabled');
        }
      }
    };
  })();

  function getTranslateXFromCurIndex() {
    return curIndex &lt;= 0 ? 0 : - rootWidth * curIndex;
  }

  function moveToIndex(index ,params) {
    preIndex = curIndex;
    curIndex = index;
    translateX = getTranslateXFromCurIndex();
    calc(false, params);
  }

  function move(type) {
    var nextIndex = curIndex, unstableTranslateX;
    if (type === 'prev') {
      nextIndex &gt; 0 &amp;&amp; nextIndex--;
    } else if (type === 'next') {
      nextIndex &lt; count - 1 &amp;&amp; nextIndex++;
    }
    if (type === 'cur') {
      moveToIndex(curIndex, { animation: true });
      return;
    }
    unstableTranslateX = translateX % rootWidth !== 0;
    if (nextIndex !== curIndex || unstableTranslateX) {
      unstableTranslateX ? moveToIndex(nextIndex, { animation: true }) : moveToIndex(nextIndex);
    }
  }

  setOptions(options);
  init();
  preIndex = curIndex;

  $swiperButtonPrev.on('click', function(e) {
    e.stopPropagation();
    move('prev');
  });
  $swiperButtonNext.on('click', function(e) {
    e.stopPropagation();
    move('next');
  });
  $window.on('resize', function() {
    calc(true, { animation: false });
  });

  (function() {
    var pageX, pageY, velocityX, preTranslateX = translateX, timeStamp, touching;
    function handleTouchstart(e) {
      var point = e.touches ? e.touches[0] : e;
      pageX = point.pageX;
      pageY = point.pageY;
      velocityX = 0;
      preTranslateX = translateX;
    }
    function handleTouchmove(e) {
      if (e.touches &amp;&amp; e.touches.length &gt; 1) {
        return;
      }
      var point = e.touches ? e.touches[0] : e;
      var deltaX = point.pageX - pageX;
      var deltaY = point.pageY - pageY;
      velocityX = deltaX / (e.timeStamp - timeStamp);
      timeStamp = e.timeStamp;
      if (e.cancelable &amp;&amp; Math.abs(Math.atan(deltaY / deltaX)) &lt; CRITICAL_ANGLE) {
        touching = true;
        translateX += deltaX;
        calc(false, { animation: false });
      }
      pageX = point.pageX;
      pageY = point.pageY;
    }
    function handleTouchend() {
      touching = false;
      var deltaX = translateX - preTranslateX;
      var distance = deltaX + velocityX * rootWidth;
      if (Math.abs(distance) &gt; rootWidth / 2) {
        distance &gt; 0 ? move('prev') : move('next');
      } else {
        move('cur');
      }
    }
    $swiperWrapper.on('touchstart', handleTouchstart);
    $swiperWrapper.on('touchmove', handleTouchmove);
    $swiperWrapper.on('touchend', handleTouchend);
    $swiperWrapper.on('touchcancel', handleTouchend);

    (function() {
      var pressing = false, moved = false;
      $swiperWrapper.on('mousedown', function(e) {
        pressing = true; handleTouchstart(e);
      });
      $swiperWrapper.on('mousemove', function(e) {
        pressing &amp;&amp; (e.preventDefault(), moved = true, handleTouchmove(e));
      });
      $swiperWrapper.on('mouseup', function(e) {
        pressing &amp;&amp; (pressing = false, handleTouchend(e));
      });
      $swiperWrapper.on('mouseleave', function(e) {
        pressing &amp;&amp; (pressing = false, handleTouchend(e));
      });
      $swiperWrapper.on('click', function(e) {
        moved &amp;&amp; (e.stopPropagation(), moved = false);
      });
    })();

    $root.on('touchmove', function(e) {
      if (e.cancelable &amp; touching) {
        e.preventDefault();
      }
    });
  })();

  return {
    setOptions: setOptions,
    previous: function(){
      move('prev');
    },
    next: function(){
      move('next');
    },
    refresh: function() {
      calc(true, { animation: false });
    }
  };
}
$.fn.swiper = swiper;   }); })(); var SOURCES = window.TEXT_VARIABLES.sources; window.Lazyload.js(SOURCES.jquery, function() {   $('.swiper-demo').swiper(); });
</code></pre></div></div>

<p>This course is designed to provide laboratory experience to complement the physical chemistry lecture course, CHEM321/421-24A which presents the principles of physical chemistry that govern equilibria and reaction rates in chemical systems. Laboratory experiments will be related to properties of thermodynamic proper- ties of substances, thermochemistry, chemical and phase equilibria, reaction kinetics.</p>

<h3 id="lecture-content">Lecture content</h3>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Â </th>
      <th style="text-align: left">Topics</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Lab 1</td>
      <td style="text-align: left">Heat capacity ratios for gases</td>
    </tr>
    <tr>
      <td style="text-align: left">Lab 2</td>
      <td style="text-align: left">Heats of combustion (calorimetry)</td>
    </tr>
    <tr>
      <td style="text-align: left">Lab 3</td>
      <td style="text-align: left">Partial molar volume</td>
    </tr>
    <tr>
      <td style="text-align: left">Lab 4</td>
      <td style="text-align: left">Vapor pressure of a pure liquid</td>
    </tr>
    <tr>
      <td style="text-align: left">Lab 5</td>
      <td style="text-align: left">Acid dissociation constant (pKa) of methyl red</td>
    </tr>
    <tr>
      <td style="text-align: left">Lab 6</td>
      <td style="text-align: left">Chemical equilibrium in solution</td>
    </tr>
    <tr>
      <td style="text-align: left">Lab 7</td>
      <td style="text-align: left">Cyclic voltametry</td>
    </tr>
    <tr>
      <td style="text-align: left">Lab 8</td>
      <td style="text-align: left">Kinetics of reaction</td>
    </tr>
  </tbody>
</table>
:ET